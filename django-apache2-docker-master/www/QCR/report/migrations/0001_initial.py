# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2018-03-27 19:35
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AggregatedWuDeliverable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200, null=True)),
                ('quantity', models.IntegerField(null=True)),
                ('spatialReference', models.CharField(max_length=100, null=True)),
                ('reqPerContract', models.NullBooleanField()),
                ('reqPerSpec', models.NullBooleanField()),
                ('delivered', models.NullBooleanField()),
                ('accepted', models.NullBooleanField()),
                ('comment', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AggregatedWuDeliverableCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('category', models.IntegerField(choices=[(1, 'DEM'), (2, 'Swath'), (3, 'Classified')])),
            ],
        ),
        migrations.CreateModel(
            name='AggregatedWuDeliverableTab',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ChecklistCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='ChecklistItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('placement', models.IntegerField()),
                ('name', models.CharField(max_length=300)),
                ('complete', models.BooleanField(default=False)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='report.ChecklistCategory')),
            ],
        ),
        migrations.CreateModel(
            name='ClassifiedTab',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='CollectionInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('areaExtent', models.FloatField(null=True)),
                ('collectionStart', models.DateTimeField(null=True)),
                ('collectionEnd', models.DateTimeField(null=True)),
                ('tileSize', models.CharField(max_length=30, null=True)),
                ('tileSizeUnits', models.CharField(max_length=30, null=True)),
                ('demResolution', models.FloatField(null=True)),
                ('demResolutionUnits', models.CharField(max_length=30, null=True)),
                ('horizontalSpatRef', models.CharField(max_length=100, null=True)),
                ('verticalSpatRef', models.CharField(max_length=100, null=True)),
                ('lasVersion', models.FloatField(null=True)),
                ('configuredNps', models.FloatField(null=True)),
                ('configNpsUnits', models.CharField(max_length=30, null=True)),
                ('configuredAnps', models.FloatField(null=True)),
                ('configAnpsUnits', models.CharField(max_length=30, null=True)),
                ('configAnpsMethod', models.CharField(max_length=200, null=True)),
                ('hydroTreatment', models.CharField(max_length=30, null=True)),
                ('configScanAngle', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Deliverable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200, null=True)),
                ('quantity', models.IntegerField(null=True)),
                ('spatialReference', models.CharField(max_length=100, null=True)),
                ('reqPerContract', models.NullBooleanField()),
                ('reqPerSpec', models.NullBooleanField()),
                ('delivered', models.NullBooleanField()),
                ('comment', models.CharField(max_length=200, null=True)),
                ('accepted', models.NullBooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='DeliverableCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.IntegerField(choices=[(1, 'Metadata'), (2, 'Breaklines'), (3, 'Digital Surface Model'), (6, 'Reports and Shapefiles'), (7, 'Other')])),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='DemTab',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Error',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200, null=True)),
                ('locationX', models.FloatField(null=True)),
                ('locationY', models.FloatField(null=True)),
                ('resolved', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='ErrorImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='report.FileModelErrorImage/bytes/filename/mimetype')),
                ('error', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='report.Error')),
            ],
        ),
        migrations.CreateModel(
            name='ErrorSubtype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='ErrorType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('aggDeliverableCategory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='report.AggregatedWuDeliverableCategory')),
                ('deliverableCategory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='report.DeliverableCategory')),
            ],
        ),
        migrations.CreateModel(
            name='FileModelErrorImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bytes', models.TextField()),
                ('filename', models.CharField(max_length=255)),
                ('mimetype', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='FileModelReportAoiImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bytes', models.TextField()),
                ('filename', models.CharField(max_length=255)),
                ('mimetype', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='FileModelReportErrorImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bytes', models.TextField()),
                ('filename', models.CharField(max_length=255)),
                ('mimetype', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='PointCloudClassification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classificationId', models.IntegerField(null=True)),
                ('classificationType', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectSpecification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='QualityLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='ReportAoiImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='report.FileModelReportAoiImage/bytes/filename/mimetype')),
            ],
        ),
        migrations.CreateModel(
            name='ReportData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wpName', models.CharField(max_length=50)),
                ('type', models.CharField(max_length=50)),
                ('poc', models.CharField(max_length=50)),
                ('pocEmail', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ReportDeliverableData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=50)),
                ('accepted', models.CharField(max_length=5)),
                ('summary', models.CharField(max_length=1000)),
                ('reportData', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='report.ReportData')),
            ],
        ),
        migrations.CreateModel(
            name='ReportErrorGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=50)),
                ('numErrors', models.CharField(max_length=50)),
                ('errorType', models.CharField(max_length=50)),
                ('errorSubtype', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ReportErrorImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='report.FileModelReportImage/bytes/filename/mimetype')),
                ('errorGroup', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='report.ReportErrorGroup')),
            ],
        ),
        migrations.CreateModel(
            name='ReportPassFailData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.BooleanField(default=False)),
                ('relVa', models.NullBooleanField()),
                ('absVa', models.NullBooleanField()),
                ('metadata', models.NullBooleanField()),
                ('breaklines', models.NullBooleanField()),
                ('reports', models.NullBooleanField()),
                ('other', models.NullBooleanField()),
                ('dem', models.NullBooleanField()),
                ('swath', models.NullBooleanField()),
                ('classified', models.NullBooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='ReportSva',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('svaReqChkpts', models.FloatField(null=True)),
                ('svaRepChkpts', models.FloatField(null=True)),
                ('svaTestChkpts', models.FloatField(null=True)),
                ('svaReqValue', models.FloatField(null=True)),
                ('svaRepValue', models.FloatField(null=True)),
                ('svaTestValue', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReportVaData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ReportVaDataCollectionCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ReportVaDataCollectionWorkUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wu', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ReportWorkUnitId',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workUnitId', models.CharField(max_length=50)),
                ('reportData', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='report.ReportData')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=75)),
                ('project_date_received', models.DateTimeField(null=True)),
                ('project_date_assigned', models.DateTimeField(null=True)),
                ('project_completion_date', models.DateTimeField(null=True)),
                ('accepted', models.BooleanField(default=False)),
                ('absVaAccept', models.BooleanField(default=False)),
                ('relVaAccept', models.NullBooleanField(default=False)),
                ('metadataAccept', models.NullBooleanField(default=False)),
                ('breaklinesAccept', models.NullBooleanField(default=False)),
                ('reportsAccept', models.NullBooleanField(default=False)),
                ('otherAccept', models.NullBooleanField(default=False)),
                ('demAccept', models.NullBooleanField(default=False)),
                ('swathAccept', models.NullBooleanField(default=False)),
                ('classifiedAccept', models.NullBooleanField(default=False)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReviewProgressChecklist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('master', models.BooleanField(default=False)),
                ('review', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='report.Review')),
            ],
        ),
        migrations.CreateModel(
            name='SavedReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('createdDate', models.CharField(max_length=50)),
                ('createdUser', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='SensorType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='SensorUsed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='SuppVaMeasure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('landcover', models.CharField(max_length=200, null=True)),
                ('reqChkpts', models.IntegerField(null=True)),
                ('reqVal', models.FloatField(null=True)),
                ('vaReqSvaId', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='SuppVaResults',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('testedChkpts', models.IntegerField(null=True)),
                ('reportedChkpts', models.IntegerField(null=True)),
                ('testedValue', models.FloatField(null=True)),
                ('reportedValue', models.FloatField(null=True)),
                ('sva', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='report.SuppVaMeasure')),
            ],
        ),
        migrations.CreateModel(
            name='SwathTab',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='VaData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VaRequirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='WorkPackage',
            fields=[
                ('workPackageId', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, null=True)),
                ('description', models.TextField(null=True)),
                ('type', models.CharField(max_length=200, null=True)),
                ('vendor', models.CharField(max_length=200, null=True)),
                ('poc', models.CharField(max_length=200, null=True)),
                ('pocEmail', models.CharField(max_length=200, null=True)),
                ('restrictions', models.NullBooleanField()),
                ('restrictionsDate', models.DateField(null=True)),
                ('restrictionsLayer', models.NullBooleanField()),
                ('thirdPartyQa', models.NullBooleanField()),
                ('thirdPartyQaBy', models.CharField(max_length=200, null=True)),
                ('receivedDate', models.DateField(null=True)),
                ('assignedDate', models.DateField(null=True)),
                ('projectSpec', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='report.ProjectSpecification')),
            ],
        ),
        migrations.CreateModel(
            name='WorkUnit',
            fields=[
                ('workUnitId', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, null=True)),
                ('status', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Classified',
            fields=[
                ('aggregatedwudeliverable_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='report.AggregatedWuDeliverable')),
                ('classPCVs', models.FloatField(null=True)),
                ('pointRecDataFormat', models.CharField(max_length=200, null=True)),
            ],
            bases=('report.aggregatedwudeliverable',),
        ),
        migrations.CreateModel(
            name='DEM',
            fields=[
                ('aggregatedwudeliverable_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='report.AggregatedWuDeliverable')),
                ('resolution', models.CharField(max_length=200, null=True)),
                ('resolutionUnits', models.CharField(max_length=200, null=True)),
                ('pixelType', models.CharField(max_length=200, null=True)),
                ('interpolation', models.CharField(max_length=200, null=True)),
            ],
            bases=('report.aggregatedwudeliverable',),
        ),
        migrations.CreateModel(
            name='ReportVaData10',
            fields=[
                ('reportvadata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='report.ReportVaData')),
                ('cvaReqChkpts', models.FloatField(null=True)),
                ('cvaRepChkpts', models.FloatField(null=True)),
                ('cvaTestChkpts', models.FloatField(null=True)),
                ('cvaReqValue', models.FloatField(null=True)),
                ('cvaRepValue', models.FloatField(null=True)),
                ('cvaTestValue', models.FloatField(null=True)),
                ('fvaReqChkpts', models.FloatField(null=True)),
                ('fvaRepChkpts', models.FloatField(null=True)),
                ('fvaTestChkpts', models.FloatField(null=True)),
                ('fvaReqValue', models.FloatField(null=True)),
                ('fvaRepValue', models.FloatField(null=True)),
                ('fvaTestValue', models.FloatField(null=True)),
            ],
            bases=('report.reportvadata',),
        ),
        migrations.CreateModel(
            name='ReportVaData12',
            fields=[
                ('reportvadata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='report.ReportVaData')),
                ('nvaReqChkpts', models.FloatField(null=True)),
                ('nvaRepChkpts', models.FloatField(null=True)),
                ('nvaTestChkpts', models.FloatField(null=True)),
                ('nvaReqValue', models.FloatField(null=True)),
                ('nvaRepValue', models.FloatField(null=True)),
                ('nvaTestValue', models.FloatField(null=True)),
                ('vvaReqChkpts', models.FloatField(null=True)),
                ('vvaRepChkpts', models.FloatField(null=True)),
                ('vvaTestChkpts', models.FloatField(null=True)),
                ('vvaReqValue', models.FloatField(null=True)),
                ('vvaRepValue', models.FloatField(null=True)),
                ('vvaTestValue', models.FloatField(null=True)),
            ],
            bases=('report.reportvadata',),
        ),
        migrations.CreateModel(
            name='Swath',
            fields=[
                ('aggregatedwudeliverable_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='report.AggregatedWuDeliverable')),
                ('swathPCVs', models.FloatField(null=True)),
                ('pointRecDataFormat', models.CharField(max_length=200, null=True)),
                ('requiredInterswath', models.FloatField(null=True)),
                ('recordedInterswath', models.FloatField(null=True)),
                ('testedInterswath', models.FloatField(null=True)),
            ],
            bases=('report.aggregatedwudeliverable',),
        ),
        migrations.CreateModel(
            name='VaData10',
            fields=[
                ('vadata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='report.VaData')),
                ('reportedCvaValue', models.FloatField(null=True)),
                ('reportedCvaChkpts', models.IntegerField(null=True)),
                ('testedCvaValue', models.FloatField(null=True)),
                ('testedCvaChkpts', models.IntegerField(null=True)),
                ('reportedFvaValue', models.FloatField(null=True)),
                ('reportedFvaChkpts', models.IntegerField(null=True)),
                ('testedFvaValue', models.FloatField(null=True)),
                ('testedFvaChkpts', models.IntegerField(null=True)),
            ],
            bases=('report.vadata',),
        ),
        migrations.CreateModel(
            name='VaData12',
            fields=[
                ('vadata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='report.VaData')),
                ('reportedNvaValue', models.FloatField(null=True)),
                ('reportedNvaChkpts', models.IntegerField(null=True)),
                ('testedNvaValue', models.FloatField(null=True)),
                ('testedNvaChkpts', models.IntegerField(null=True)),
                ('reportedVvaValue', models.FloatField(null=True)),
                ('reportedVvaChkpts', models.IntegerField(null=True)),
                ('testedVvaValue', models.FloatField(null=True)),
                ('testedVvaChkpts', models.IntegerField(null=True)),
            ],
            bases=('report.vadata',),
        ),
        migrations.CreateModel(
            name='VaRequirement10',
            fields=[
                ('varequirement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='report.VaRequirement')),
                ('fundamentalVaChkpt', models.IntegerField(null=True)),
                ('fundamentalVaValue', models.FloatField(null=True)),
                ('consolidatedVaChkpt', models.IntegerField(null=True)),
                ('consolidatedVaValue', models.FloatField(null=True)),
            ],
            bases=('report.varequirement',),
        ),
        migrations.CreateModel(
            name='VaRequirement12',
            fields=[
                ('varequirement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='report.VaRequirement')),
                ('vegetatedVaChkpt', models.IntegerField(null=True)),
                ('vegetatedVaValue', models.FloatField(null=True)),
                ('nonvegetatedVaChkpt', models.IntegerField(null=True)),
                ('nonvegetatedVaValue', models.FloatField(null=True)),
            ],
            bases=('report.varequirement',),
        ),
        migrations.AddField(
            model_name='workunit',
            name='aggregatedWuDeliverable',
            field=models.ManyToManyField(to='report.AggregatedWuDeliverable'),
        ),
        migrations.AddField(
            model_name='workunit',
            name='collectionInfo',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='report.CollectionInfo'),
        ),
        migrations.AddField(
            model_name='workunit',
            name='qualityLevel',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='report.QualityLevel'),
        ),
        migrations.AddField(
            model_name='workunit',
            name='review',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='report.Review'),
        ),
        migrations.AddField(
            model_name='workunit',
            name='vaRequirement',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='report.VaRequirement'),
        ),
        migrations.AddField(
            model_name='workunit',
            name='workPackage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='report.WorkPackage'),
        ),
        migrations.AddField(
            model_name='vadata',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='report.AggregatedWuDeliverableCategory'),
        ),
        migrations.AddField(
            model_name='vadata',
            name='vaRequirement',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='report.VaRequirement'),
        ),
        migrations.AddField(
            model_name='swathtab',
            name='vaRequirement',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='report.VaRequirement'),
        ),
        migrations.AddField(
            model_name='suppvaresults',
            name='vaData',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='report.VaData'),
        ),
        migrations.AddField(
            model_name='reportvadatacollectionworkunit',
            name='report',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='report.SavedReport'),
        ),
        migrations.AddField(
            model_name='reportvadatacollectioncategory',
            name='wu',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='report.ReportVaDataCollectionWorkUnit'),
        ),
        migrations.AddField(
            model_name='reportvadata',
            name='cat',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='report.ReportVaDataCollectionCategory'),
        ),
        migrations.AddField(
            model_name='reportpassfaildata',
            name='report',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='report.SavedReport'),
        ),
        migrations.AddField(
            model_name='reporterrorgroup',
            name='report',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='report.SavedReport'),
        ),
        migrations.AddField(
            model_name='reportdata',
            name='report',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='report.SavedReport'),
        ),
        migrations.AddField(
            model_name='reportaoiimage',
            name='reportData',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='report.ReportData'),
        ),
        migrations.AddField(
            model_name='pointcloudclassification',
            name='workPackage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='report.WorkPackage'),
        ),
        migrations.AddField(
            model_name='errorsubtype',
            name='errorType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='report.ErrorType'),
        ),
        migrations.AddField(
            model_name='error',
            name='aggregatedWuDeliverable',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='report.AggregatedWuDeliverable'),
        ),
        migrations.AddField(
            model_name='error',
            name='deliverable',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='report.Deliverable'),
        ),
        migrations.AddField(
            model_name='error',
            name='errorSubtype',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='report.ErrorSubtype'),
        ),
        migrations.AddField(
            model_name='error',
            name='errorType',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='report.ErrorType'),
        ),
        migrations.AddField(
            model_name='demtab',
            name='vaRequirement',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='report.VaRequirement'),
        ),
        migrations.AddField(
            model_name='deliverable',
            name='deliverableCategory',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='report.DeliverableCategory'),
        ),
        migrations.AddField(
            model_name='deliverable',
            name='workUnit',
            field=models.ManyToManyField(to='report.WorkUnit'),
        ),
        migrations.AddField(
            model_name='collectioninfo',
            name='qualityLevel',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='report.QualityLevel'),
        ),
        migrations.AddField(
            model_name='collectioninfo',
            name='sensorType',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='report.SensorType'),
        ),
        migrations.AddField(
            model_name='collectioninfo',
            name='sensorUsed',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='report.SensorUsed'),
        ),
        migrations.AddField(
            model_name='classifiedtab',
            name='vaRequirement',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='report.VaRequirement'),
        ),
        migrations.AddField(
            model_name='checklistitem',
            name='checklist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='report.ReviewProgressChecklist'),
        ),
        migrations.AddField(
            model_name='aggregatedwudeliverabletab',
            name='deliverable',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='report.AggregatedWuDeliverable'),
        ),
        migrations.AddField(
            model_name='aggregatedwudeliverabletab',
            name='vaRequirement',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='report.VaRequirement'),
        ),
        migrations.AddField(
            model_name='aggregatedwudeliverable',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='report.AggregatedWuDeliverableCategory'),
        ),
        migrations.AddField(
            model_name='aggregatedwudeliverable',
            name='vaData',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='report.VaData'),
        ),
        migrations.AddField(
            model_name='swathtab',
            name='swath',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='report.Swath'),
        ),
        migrations.AddField(
            model_name='suppvameasure',
            name='vaRequirement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='report.VaRequirement10'),
        ),
        migrations.AddField(
            model_name='reportsva',
            name='reportVaData',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='report.ReportVaData10'),
        ),
        migrations.AddField(
            model_name='demtab',
            name='dem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='report.DEM'),
        ),
        migrations.AddField(
            model_name='classifiedtab',
            name='classified',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='report.Classified'),
        ),
    ]
